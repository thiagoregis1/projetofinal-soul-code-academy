# -*- coding: utf-8 -*-
"""004_SOCIAL_MEDIA_CONSULTAS_Nivel_SparkSQL.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10s6seXWQckPZvza7XJozd80KutQ7jvt9

#Instalação Bibliotecas
"""

pip install pyspark

pip install fsspec

pip install gcsfs

"""#Bibliotecas"""

#Importando funcções padrão. Função Window também importada porque será usado mais na frente
import os
from google.cloud import storage

from pyspark.sql import SparkSession, Window
spark = SparkSession.builder.appName('GCSFilesRead').getOrCreate()

import pyspark.sql.functions as F
from pyspark.sql.functions import to_timestamp, to_date

from pyspark.sql.types import *
import pandas as pd

serviceaccount = 'gs://projetofinalgrupo8/chave/projetofinalgrupo8-2dcd866c3f46.json'
os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = serviceaccount

dfspark = pd.read_csv('gs://projetofinalgrupo8/saida/data_tratado_pyspark.csv', sep=',',encoding='UTF-8', header=0)
df = spark.createDataFrame(dfspark).createOrReplaceTempView("leitura_sql")

"""#Consultas

**00.CONSULTA TABELA**
"""

spark.sql("SELECT * FROM leitura_sql LIMIT 10").show()

"""**01.CONSULTA VIDEOS COM MAIS DE 50% DE CURTIDAS EM RELAÇÃO AS VISUALIZAÇÕES**"""

#spark.sql("SELECT * FROM leitura_sql WHERE pais = 'BR' AND like_por_visualizacao_100 > 50 AND cont_visualizacao > 0").show()
spark.sql("SELECT * FROM leitura_sql WHERE like_por_visualizacao_100 > 50 AND cont_visualizacao > 0").show()

"""**02.CONSULTA VIDEOS DA CATEGORIA FILMES E ANIMAÇÃO NOS EUA COM SUAS VISUALIZAÇÕES E PERCENTUAL DE CURTIDAS POR VISUALIZAÇÃO**"""

spark.sql("SELECT titulo_video, MAX(cont_visualizacao) AS total_visualizacao_por_video, \
                  ROUND((MAX(curtidas) / MAX(cont_visualizacao))*100, 2) AS curtidas_cada_100_visualizacao \
           FROM leitura_sql \
           WHERE (categoria = 'filme_e_animacao' AND pais = 'US') \
           GROUP BY titulo_video \
           ORDER BY total_visualizacao_por_video DESC \
           LIMIT 10").show()

"""**03.CONSULTA VÍDEOS QUE TENHAM O NOME DO BTS COM MAIS VISUALIZAÇÕES**"""

spark.sql("SELECT titulo_video, MAX(cont_visualizacao) AS visualizacoes \
           FROM leitura_sql \
           WHERE (titulo_video LIKE '%BTS%') \
           GROUP BY titulo_video \
           ORDER BY visualizacoes DESC \
           LIMIT 5").show()

"""**04.CONSULTA VÍDEOS QUE TENHAM O NOME DO NEYMAR COM MAIS VISUALIZAÇÕES**"""

spark.sql("SELECT titulo_video, MAX(cont_visualizacao) AS visualizacoes \
           FROM leitura_sql \
           WHERE (titulo_video LIKE '%NEYMAR%') \
           GROUP BY titulo_video \
           ORDER BY visualizacoes DESC \
           LIMIT 10").show()

"""**05.CONSULTA DE VIDEOS COM MAIS DE 10 MILHÕES DE VISUALIZAÇÕES DA CATEGORIA ESPORTES DO YOUTUBE BRASIL**"""

spark.sql("SELECT titulo_video, MAX(cont_visualizacao) AS visualizacoes \
           FROM leitura_sql \
           WHERE (cont_visualizacao > 10000000 AND categoria = 'esportes' AND pais = 'BR') \
           GROUP BY titulo_video \
           ORDER BY visualizacoes DESC \
           LIMIT 10").show()

"""**06.CONSULTA VIDEOS ANITTA COM NUMERO DE VISUALIZACAO, CURTIDAS E COMENTARIOS PUBLICADOS DEPOIS DE 2021-06-30** """

spark.sql("SELECT titulo_video, MAX(cont_visualizacao) AS num_visualizacao, MAX(curtidas) AS num_curtidas, MAX(cont_comentarios) AS num_comentarios \
           FROM leitura_sql \
           WHERE nome_canal = 'Anitta' AND publicado_em_data > '2021-06-30' \
           GROUP BY titulo_video \
           ORDER BY num_visualizacao DESC \
           LIMIT 10").show()

"""**07.CONSULTA VIDEOS ANITTA COM NUMERO DE VISUALIZACAO, CURTIDAS E COMENTARIOS**"""

spark.sql("SELECT titulo_video, MAX(cont_visualizacao) AS num_visualizacao, MAX(curtidas) AS num_curtidas, MAX(cont_comentarios) AS num_comentarios \
           FROM leitura_sql \
           WHERE nome_canal = 'Anitta' \
           GROUP BY titulo_video \
           ORDER BY num_visualizacao DESC \
           LIMIT 10").show()

"""**08.CONSULTA DE TOTAL DE VISUALIZACOES E NUMERO DE VIDEOS DOS CANAIS DA CATEGORIA DE JOGOS**"""

spark.sql("SELECT nome_canal, COUNT(DISTINCT titulo_video) AS numero_videos, SUM(DISTINCT cont_visualizacao) AS total_visualizacao_por_canal \
           FROM leitura_sql \
           WHERE categoria = 'jogos' \
           GROUP BY nome_canal \
           ORDER BY total_visualizacao_por_canal DESC \
           LIMIT 10").show()

"""**09.CONSULTA NUMERO DE CANAIS E MEDIA DE VISUALIZACOES POR VIDEO DA CATEGORIA**"""

spark.sql("SELECT categoria, COUNT(DISTINCT nome_canal) AS numero_canais, ROUND(MEAN(cont_visualizacao), 2) AS media_visualizacao_por_video \
           FROM leitura_sql \
           GROUP BY categoria \
           ORDER BY media_visualizacao_por_video DESC").show()

"""**10.CONSULTA VIDEOS COM MENOR NUMERO DE DESCURTIDAS MAIORES QUE ZERO NA CATEGORIA MUSICA NOS EUA, MOSTRANDO NÚMERO DE VISUALIZAÇÕES**"""

spark.sql("SELECT titulo_video, MIN(nao_curtidas) AS menores_nao_curtidas, MAX(cont_visualizacao) AS numero_visualizacao \
           FROM leitura_sql \
           WHERE (categoria = 'musica' AND pais = 'US' AND nao_curtidas > 0) \
           GROUP BY titulo_video \
           ORDER BY menores_nao_curtidas \
           LIMIT 10").show()

"""**11.CONSULTA VIDEOS DO CANAL DO FELIPE NETO COM MAIOR NÚMERO DE VISUALIZAÇÕES**"""

spark.sql("SELECT titulo_video, MAX(cont_visualizacao) AS numero_visualizacao \
           FROM leitura_sql \
           WHERE nome_canal = 'Felipe Neto' \
           GROUP BY titulo_video \
           ORDER BY numero_visualizacao DESC \
           LIMIT 10").show()

"""**12.CONSULTA CANAIS BRASILEIROS COM MAIOR NÚMERO DE VÍDEOS PUBLICADOS**"""

spark.sql("SELECT nome_canal, COUNT(DISTINCT titulo_video) AS numero_videos_destaque \
           FROM leitura_sql \
           WHERE pais = 'BR' \
           GROUP BY nome_canal \
           ORDER BY numero_videos_destaque DESC \
           LIMIT 10").show()

"""**13.CONSULTA NÚMERO DE CANAIS POR PAÍS E SUA MÉDIA DE COMENTÁRIOS POR VÍDEO**"""

spark.sql("SELECT pais, COUNT(DISTINCT nome_canal) AS numero_canais, ROUND(MEAN(cont_comentarios), 2) AS media_comentarios_por_video \
           FROM leitura_sql \
           GROUP BY pais \
           ORDER BY numero_canais DESC").show()

"""**14.CONSULTA VIDEOS COM MAIS VISUALIZAÇÕES**"""

spark.sql("SELECT titulo_video, MAX(cont_visualizacao) AS total_visualizacao \
           FROM leitura_sql \
           GROUP BY titulo_video \
           ORDER BY total_visualizacao DESC").show()

