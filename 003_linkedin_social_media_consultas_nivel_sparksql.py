# -*- coding: utf-8 -*-
"""003_LINKEDIN_SOCIAL_MEDIA_CONSULTAS_Nivel_SparkSQL.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YYSgxd9lrnmi0e8fQurUsb-eu9LMmdN1

#Instalação Bibliotecas
"""

pip install pyspark

pip install fsspec

pip install gcsfs

"""#Bibliotecas"""

#Importando funcções padrão. Função Window também importada porque será usado mais na frente
import os
from google.cloud import storage

from pyspark.sql import SparkSession, Window
spark = SparkSession.builder.appName('GCSFilesRead').getOrCreate()

import pyspark.sql.functions as F
from pyspark.sql.functions import to_timestamp, to_date

from pyspark.sql.types import *
import pandas as pd

dfspark = pd.read_csv('gs://projetofinalgrupo8/saida/linkedin_tratado_pyspark.csv', sep=',',encoding='UTF-8')
df = spark.createDataFrame(dfspark).createOrReplaceTempView("leitura_linkedin")

"""#Consultas

**00.Consulta geral tabela**
"""

spark.sql("SELECT * FROM leitura_linkedin LIMIT 10").show()

"""**01.Pessoas com mais de 50 anos que usam óculos escuros**

---


"""

spark.sql("SELECT * FROM leitura_linkedin WHERE oculos = 'Oculos_escuros' AND idade > 50 ORDER BY idade DESC LIMIT 10").show()

"""**02.Consulta pessoas negras entre 16 e 20 anos com suas respectivas nacionalidades e número de seguidores**"""

spark.sql("SELECT idade, genero, nacionalidade, seguidores, qualidade_imagem \
           FROM leitura_linkedin \
           WHERE (idade >= 16 AND idade <= 20 AND etnia = 'Negro') \
           ORDER BY seguidores DESC").show()

"""**03.Consulta pessoas que usam ou não óculos por nacionalidade**"""

spark.sql("SELECT nacionalidade, COUNT(nacionalidade) AS qty_nacionalidade, SUM(case when oculos = 'Oculos_comum' then 1 else 0 end) AS usa_oculos, \
                  SUM(case when oculos = 'Oculos_escuros' then 1 else 0 end) AS usa_oculos_escuros, \
                  SUM(case when oculos = 'Nenhum' then 1 else 0 end) AS sem_oculos \
           FROM leitura_linkedin \
           GROUP BY nacionalidade \
           ORDER BY qty_nacionalidade DESC").show()

"""**04.Consulta média de seguidores e quantidade de mulheres influenciadoras no 
LinkedIn por nacionalidade**
"""

spark.sql("SELECT nacionalidade, COUNT(nacionalidade) AS qty_mulheres, ROUND(MEAN(seguidores), 2) AS media_seguidores \
           FROM leitura_linkedin \
           WHERE genero = 'Feminino' \
           GROUP BY nacionalidade \
           ORDER BY media_seguidores DESC").show()

"""**05.Consulta quantidade de homens e mulheres por etnia**"""

spark.sql("SELECT DISTINCT etnia, COUNT(etnia) AS qty_etnia, SUM(case when genero = 'Masculino' then 1 else 0 end) AS qty_homens, \
                                  SUM(case when genero = 'Feminino' then 1 else 0 end) AS qty_mulheres  \
           FROM leitura_linkedin \
           GROUP BY etnia").show()

"""**06.Consulta número de homens e mulheres por etnia, nacionalidade e sexo**



"""

spark.sql("SELECT DISTINCT etnia, nacionalidade, SUM(case when genero = 'Masculino' then 1 else 0 end) AS qty_homens, \
                                  SUM(case when genero = 'Feminino' then 1 else 0 end) AS qty_mulheres  \
           FROM leitura_linkedin \
           GROUP BY etnia, nacionalidade \
           ORDER BY nacionalidade, etnia").show(50)

"""**07.Consulta quantidade de homens e mulheres entre 36 e 40 anos de acordo com a etnia**

"""

spark.sql("SELECT DISTINCT idade, etnia, SUM(case when genero = 'Masculino' then 1 else 0 end) AS qty_homens, \
                                  SUM(case when genero = 'Feminino' then 1 else 0 end) AS qty_mulheres  \
           FROM leitura_linkedin \
           WHERE idade >= 36 AND idade <= 40 \
           GROUP BY idade, etnia \
           ORDER BY etnia, idade").show(50)

"""**08.Consulta idades (mais velho, média e mais novo) por etnia e quantos usam ou não usam óculos**


"""

spark.sql("SELECT DISTINCT etnia, MAX(idade) AS mais_velho, ROUND(MEAN(idade), 2) AS media_idade, MIN(idade) AS mais_novo, \
                           SUM(case when oculos = 'Oculos_comum' then 1 else 0 end) AS usa_oculos, \
                           SUM(case when oculos = 'Oculos_escuros' then 1 else 0 end) AS usa_oculos_escuros, \
                           SUM(case when oculos = 'Nenhum' then 1 else 0 end) AS sem_oculos \
           FROM leitura_linkedin \
           GROUP BY etnia \
           ORDER BY etnia").show(50)

